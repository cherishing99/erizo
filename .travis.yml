# Configuration file for TravisCI

# We use miniconda for Python so don't need any Python specific tools
language: generic

# Use the container builds so we don't need sudo priviledges
sudo: false

# Only build pushes to the master branch and tags. This avoids the double
# builds than happen when working on a branch instead of a fork.
branches:
    only:
        - master
        # Regex to build tagged commits with version numbers
        - /\d+\.\d+(\.\d+)?(\S*)?$/

# Define environment variables common to all builds
env:
    global:
        # Encrypted variables
        # Github Token for pushing the built HTML (GH_TOKEN)
        - secure: "EpA+Ecp0B4AjPpjORelUICbBZhHLm9eq+ESkgY8/tYllmZbsOI1dpG6CgZ5cB9aUJ5du5b9XoIIx63oObAo0WfQZB++KiIGMzAMrDHc6yLD5r1NVhfbgdINeR35xLchXeHmWNbuiBYIFYyn1ntgxLJakJoFzuNCvmb0+7ICEOKVZ0a76+JJcC7N6KcQ1RmU1chX0QDjHdclIgaV7UvaAcla5/z3yWjvDrWkm/0kNIiQa3EcbkJhJHm/r/eAhgZoat40Zyx6dXGKIqutDByatRJSrqScc0W/zr3XpWZFh6fl2t0J+qzaRpSAzJNsb+qFoOwjmk2+B/pYh03RxFbi5LWS6zOWWK8YciYDJKm0JDeDwXrkozDZzSMH87cyuRTGLn8OUNdz808g8ujvENwsYCG7mY70YRS3Wvwfpz3taENs1WyTwKPM3+ydU3o1xs5onq24gLHYjMPB1pUdHx+nLkdgYbgKPFXsGUCSc16g0xEgJelTfI33Yobo5tAInXEqH/OdxOJRxsKoIvCuO293AOJVYrcPDw4Fah9vhIQqdNsz4xPk0S4UdqJ2WFmF087wDm+B4WW/kMxSmrVbxpaHwis8/LMnyM76MPpgziap5awkBLLuK9RDQmhP+TigCuof50vMRk9D+fdSmJ1X5sKtzf6t7OZB8rBx51JUe3TflCU8="
        # PyPI password for deploying releases (TWINE_PASSWORD)
        - secure: "VqO8ueQgqrKuSFKo4MENqBIF+138UzPZuLNPeTdLeQ9AO7HMgRBZ5jtHMUCUZFjAVan5bdiitWJYNnJfoJv7jwMoeWBXQO/It+llzIWnHkphyn6TTZq0nis+aeHTt80/3uNNTiZTKVjA7GWN6lr6X+TEBJxRvPxuNmQkzGfOWvzFOab3X4moZiYVyD2BG+ko/YpP1g0pEhnUpCATA5v9J6KEpe3/kLOs+lWOLsMY+JWsBAm7M0CPKbBv+QvTRG8F7bIx8WceQugGyJvcQzkcqlFwNNiNnfYn7ucEBpceupbgfLyDMg8Z14MTfYo/Qi7cWjUpUj+arHU9kZexX0o0MLOLuekr14yMFzDUu0Hncv+bXb9HveWcIX9MlZ6KanG1x8nDFLodkFkPya64klL2c42VJKEcZyMlKDUiBU0+ibJFo0UXywEkezABX7kM1PZQ1/mbtnVhpb9NZnDFM051o85Y8BetLPK3I+D3EsTAI43kL8mdhhtrjXQ55g1UiquzUjSaEGjqoiauXDu8PDJWaoPeTxq/oGmSUT4nlFAG1eaZAkE0D0lIEGbMPrhJOMfDOfFE3c2Ng8YU4yemDtfzfXP+9eUqDFfhqt+tblKyoS4TAckJjmbxjP2HHDKLqCP5v5cYuwoJvoiBxJmLLqv389C97dm/KnagJP55qFHeqZo="
        - TWINE_USERNAME=Leonardo.Uieda
        # The files with the listed requirements to be installed by conda
        - CONDA_REQUIREMENTS=requirements.txt
        - CONDA_REQUIREMENTS_DEV=requirements-dev.txt
        - CONDA_INSTALL_EXTRA="codecov"
        # These variables control which actions are performed in a build
        - DEPLOY_DOCS=false
        - DEPLOY_PYPI=false

# Specify the build configurations. Be sure to only deploy from a single build.
matrix:
    include:
        # Main build to deploy to PyPI and Github pages
        - name: "Linux - Python 3.7 (deploy)"
          os: linux
          env:
              - PYTHON=3.7
              - DEPLOY_DOCS=true
              - DEPLOY_PYPI=true
              - CONDA_INSTALL_EXTRA="codecov twine"
        - name: "Linux - Python 3.6"
          os: linux
          env:
              - PYTHON=3.6

# Setup the build environment
before_install:
    # Get the Fatiando CI scripts
    - git clone --branch=1.2.0 --depth=1 https://github.com/fatiando/continuous-integration.git
    # Download and install miniconda and setup dependencies
    # Need to source the script to set the PATH variable globaly
    - source continuous-integration/travis/setup-miniconda.sh
    # Show installed pkg information for postmortem diagnostic
    - conda list

# Install the package that we want to test
install:
    # Make a binary wheel for our package and install it
    - python setup.py bdist_wheel
    - pip install dist/*

# Run the actual tests and checks
script:
    # Run the test suite
    - make test
    # Build the documentation
    - make -C doc clean all

# Things to do if the build is successful
after_success:
    # Upload coverage information
    - coverage xml
    - echo "Uploading coverage to Codecov"
    - codecov -e PYTHON

# Deploy
deploy:
    # Make a release on PyPI
    - provider: script
      script: continuous-integration/travis/deploy-pypi.sh
      on:
          tags: true
          condition: '$DEPLOY_PYPI == "true"'
    # Push the built HTML in doc/_build/html to the gh-pages branch
    - provider: script
      script: continuous-integration/travis/deploy-gh-pages.sh
      skip_cleanup: true
      on:
          branch: master
          condition: '$DEPLOY_DOCS == "true"'
    # Push HTML when building tags as well
    - provider: script
      script: continuous-integration/travis/deploy-gh-pages.sh
      skip_cleanup: true
      on:
          tags: true
          condition: '$DEPLOY_DOCS == "true"'

# Don't send out emails every time a build fails
notifications:
    email: false
